package bot;

import org.javacord.api.entity.message.Message;
import org.javacord.api.entity.message.embed.EmbedBuilder;
import org.javacord.api.event.message.reaction.ReactionAddEvent;
import org.javacord.api.listener.message.reaction.ReactionAddListener;

public class EmbedScroller implements ReactionAddListener {
    private static final String PREV = "\u2b05", NEXT = "\u27A1";
    private EmbedBuilder embed;
    private String listTitle;
    private String[] scrollList;
    private Message message;
    private int page, outputMax, pageMax;
    private void display() {
        String output = new String();
        for (int i = page * outputMax; i < Math.min((page + 1) * outputMax, scrollList.length); i++) output += scrollList[i];
        final String output2 = output;
        message.edit(embed.setFooter("Page " + (page + 1) + "/" + pageMax)
            .updateFields(field -> {
                return field.getName().equals(listTitle);
            }, field -> {
                field.setValue(output2);
            }));
    }
    public EmbedScroller(Message message, EmbedBuilder embed, String listTitle, String[] scrollList, int outputMax) {
        message.addReaction("\u2b05");
        message.addReaction("\u27a1");
        this.message = message;
        this.embed = embed;
        this.listTitle = listTitle;
        this.scrollList = scrollList;
        page = 0;
        this.outputMax = outputMax;
        this.pageMax = (scrollList.length + outputMax - 1) / outputMax;
        display();
    }
    @Override
    public void onReactionAdd(ReactionAddEvent event) {
        if (event.getUser().isPresent() && event.getUser().get().isBot()) return;
        if (event.getEmoji().equalsEmoji(PREV)) {
            if (page > 0) page--;
            display();
        } else if (event.getEmoji().equalsEmoji(NEXT)) {
            if (page < pageMax - 1) page++;
            display();
        }
    }
}