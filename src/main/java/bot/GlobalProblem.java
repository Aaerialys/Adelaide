package bot;

import java.util.ArrayList;
import java.util.HashMap;

public class GlobalProblem extends Problem { //stores a problem with votes and comments
    private static final long serialVersionUID = 4680511014728506787L; //autogenerated for storage in files
    
    private int score; //the problem's score, equal to upvotes - downvotes
    private HashMap < Long, Integer > userVotes = new HashMap < Long, Integer > (); //hashmap of users who have voted and what their vote was
    private ArrayList < String > comments = new ArrayList < String > (); //list of comments on the problem
    
    public GlobalProblem(String link) {
        super(link);
        score = 0;
    }
    
    public Boolean addVote(Long user, int newVote) { //adds a vote by a user. newVote=1 for upvotes and -1 for downvotes. returns if vote was successful
        if (!userVotes.containsKey(user)) userVotes.put(user, 0); //if the user has not yet voted, add them to the hashmap
        if (userVotes.get(user).equals(newVote)) return false; //if the user has previously liked the problem, they cannot like again, and similarly for dislikes, so return false
        score += newVote; //adds the vote to the score
        userVotes.put(user, userVotes.get(user) + newVote); //adds the new vote to the user's previous vote
        return true; //the vote was successful, so return true
    }
    public void setScore(int newScore) {
    	score=newScore;
    }
    
    public void addComment(String newComment) { //adds a new comment to the comment list
        comments.add(newComment);
    }
    public void deleteComment(int index) {
    	comments.remove(index);
    }
    
    public int getScore() { //gets the score of the problem
        return score;
    }
    
    public ArrayList < String > getComments() { //gets the problem's comments
        return comments;
    }
}